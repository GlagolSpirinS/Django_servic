# Generated by Django 5.2.5 on 2025-08-23 21:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IssueOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('no_power', 'Не включается'), ('screen_issue', 'Проблемы с экраном (мерцание, разбит, не реагирует)'), ('battery_problem', 'Быстро разряжается / не держит заряд'), ('overheating', 'Перегревается'), ('sound_issue', 'Проблемы со звуком'), ('camera_issue', 'Не работает камера'), ('wifi_bluetooth', 'Проблемы с Wi-Fi / Bluetooth'), ('software_crash', 'Зависает / перезагружается / ошибки ОС'), ('water_damage', 'Попадание влаги'), ('physical_damage', 'Механические повреждения'), ('performance_slow', 'Сильно тормозит'), ('charging_problem', 'Не заряжается / заряжается с перебоями'), ('other', 'Другое')], max_length=50, unique=True, verbose_name='Код симптома')),
                ('description', models.CharField(max_length=100, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Симптом неисправности',
                'verbose_name_plural': 'Симптомы неисправности',
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_type', models.CharField(choices=[('individual', 'Физическое лицо'), ('legal_entity', 'Юридическое лицо')], default='individual', max_length=20, verbose_name='Тип заказчика')),
                ('full_name', models.CharField(max_length=300, verbose_name='ФИО заказчика')),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название организации')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='ИНН должен содержать 10 (юр. лицо) или 12 (физ. лицо) цифр.', regex='^\\d{10,12}$')], verbose_name='ИНН')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер заказчика')),
                ('address', models.TextField(verbose_name='Адрес заказчика')),
                ('external_links', models.TextField(blank=True, help_text='Ссылки на чаты, профили в мессенджерах и т.п.', null=True, verbose_name='Внешние источники связи')),
                ('email', models.EmailField(help_text='Подтягивается из аккаунта пользователя', max_length=254, verbose_name='Email')),
                ('device_type', models.CharField(choices=[('smartphone', 'Смартфон'), ('laptop', 'Ноутбук'), ('tablet', 'Планшет'), ('desktop', 'Системный блок'), ('monitor', 'Монитор'), ('printer', 'Принтер'), ('tv', 'Телевизор'), ('smartwatch', 'Умные часы'), ('other', 'Другое')], max_length=20, verbose_name='Тип устройства')),
                ('issues_other', models.TextField(blank=True, help_text="Укажите, если выбрано 'Другое'", null=True, verbose_name='Другие симптомы')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Дополнительное описание проблемы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, создавший заявку')),
                ('issues', models.ManyToManyField(to='ServiceRequest.issueoption', verbose_name='Симптомы неисправности')),
            ],
            options={
                'verbose_name': 'Заявка в сервисный центр',
                'verbose_name_plural': 'Заявки в сервисный центр',
                'ordering': ['-created_at'],
            },
        ),
    ]
